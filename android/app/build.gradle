apply plugin: 'com.android.application'

android {
    namespace "com.bunout.app"
    compileSdk 34

    defaultConfig {
        applicationId "info.bunout.app"
        minSdkVersion 22
        targetSdkVersion 34
        versionCode 15
        versionName "1.15"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }

    signingConfigs {
        release {
            if (project.hasProperty('RELEASE_STORE_FILE') && 
                project.hasProperty('RELEASE_KEY_ALIAS') && 
                project.hasProperty('RELEASE_STORE_PASSWORD') && 
                project.hasProperty('RELEASE_KEY_PASSWORD')) {
                storeFile file(project.property('RELEASE_STORE_FILE'))
                keyAlias project.property('RELEASE_KEY_ALIAS')
                storePassword project.property('RELEASE_STORE_PASSWORD')
                keyPassword project.property('RELEASE_KEY_PASSWORD')
            } else {
                storeFile file('C:\\Windows\\System32\\my-release-key.jks') // 실제 위치로 수정
                keyAlias 'my-key-alias'
                storePassword 'jllee000'
                keyPassword 'jllee000'
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

repositories {
    flatDir {
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    implementation project(':capacitor-android')
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
    implementation project(':capacitor-cordova-android-plugins')
    implementation platform('com.google.firebase:firebase-bom:29.0.0')
    implementation 'com.google.firebase:firebase-messaging'
}

apply from: 'capacitor.build.gradle'
apply plugin: 'com.google.gms.google-services'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.exists() && servicesJSON.length() > 0) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch (Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}
